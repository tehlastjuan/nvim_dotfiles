return {

  -- clisp
  -- {
  -- 	"neovim/nvim-lspconfig",
  --    config = function()
  -- 		local lspconfig = require("lspconfig")
  --
  -- 		-- Check if the config is already defined (useful when reloading this file)
  -- 		if not lspconfig.configs.cl_lsp then
  -- 			lspconfig.configs.cl_lsp = {
  -- 				default_config = {
  -- 					cmd = { vim.env.HOME .. "~/.roswell/bin/cl-lsp" },
  -- 					filetypes = { "lisp" },
  -- 					root_dir = lspconfig.util.find_git_ancestor,
  -- 					settings = {},
  -- 				},
  -- 			}
  -- 		end
  -- 	end,
  -- },

  -- {
  --   "monkoose/nvlime",
  --   dependencies = {
  --     "monkoose/parsley",
  --     "adolenc/cl-neovim",
  --     "gpanders/nvim-parinfer",
  --     {
  --       "nvim-treesitter/nvim-treesitter",
  --       opts = function(_, opts)
  --         if type(opts.ensure_installed) == "table" then
  --           vim.list_extend(opts.ensure_installed, { "commonlisp" })
  --         end
  --       end,
  --     },
  --   },
  --   cmp_enabled = function()
  --     vim.g.nvlime_config.cmp.enabled = true
  --   end,
  --   config = function()
  --     require("cmp").setup.filetype({ "lisp" }, {
  --       sources = {
  --         { name = "nvim_lsp" },
  --         { name = "path" },
  --         { name = "buffer" },
  --         { name = "nvlime" },
  --       },
  --     })
  --   end,
  -- },

  -- prolog
  -- {
  -- 	"neovim/nvim-lspconfig",
  -- 	dependencies = {
  -- 		"jamesnvc/lsp_server",
  -- 		-- "hargettp/prolog_lsp"
  -- 	},
  -- 	config = function()
  -- 		require("lspconfig").prolog_ls.setup({})
  -- 	end,
  -- },

  -- java
  -- {
  --   "nvim-java/nvim-java",
  --   dependencies = {
  --     "nvim-java/lua-async-await",
  --     "nvim-java/nvim-java-refactor",
  --     "nvim-java/nvim-java-core",
  --     "nvim-java/nvim-java-test",
  --     "nvim-java/nvim-java-dap",
  --     "MunifTanjim/nui.nvim",
  --     "neovim/nvim-lspconfig",
  --     "mfussenegger/nvim-dap",
  --     {
  --       "williamboman/mason.nvim",
  --       opts = {
  --         registries = {
  --           "github:nvim-java/mason-registry",
  --           "github:mason-org/mason-registry",
  --         },
  --       },
  --     },
  --   },
  --   init = function()
  --     require("java").setup()
  --     require("lspconfig").jdtls.setup({})
  --   end,
  -- },

}
